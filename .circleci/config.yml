version: 2.1

executors:
  basic-executor:
    resource_class: small
    docker:
      - image: cimg/ruby:3.1.2-browsers
  test-executor:
    resource_class: small
    docker:
      - image: cimg/ruby:3.1.2-browsers
        environment:
          VCR_RECORD_MODE: none
          COVERAGE: true
  cloud-platform-executor:
    docker:
      - image: ministryofjustice/cloud-platform-tools:2.1
        environment:
          GITHUB_TEAM_NAME_SLUG: laa-estimate-eligibility
          TZ: Europe/London

references:
  authenticate_k8s: &authenticate_k8s
    run:
      name: Authenticate with cluster
      command: |
        echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
        kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=https://${K8S_CLUSTER_NAME}
        kubectl config set-credentials circleci --token=${K8S_TOKEN}
        kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=circleci --namespace=${K8S_NAMESPACE}
        kubectl config use-context ${K8S_CLUSTER_NAME}
        echo ${K8S_CLUSTER_NAME}

  build_docker_image: &build_docker_image
    run:
      name: Build docker image
      command: |
        aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 754256621582.dkr.ecr.eu-west-2.amazonaws.com
        docker build \
        --build-arg BUILD_DATE=$(date +%Y-%m-%dT%H:%M:%S%z) \
        --build-arg BUILD_TAG="app-${CIRCLE_SHA1}" \
        --build-arg APP_BRANCH=${CIRCLE_BRANCH} \
        -t app .

  push_to_ecr: &push_to_ecr
    run:
      name: Push image to ecr repo
      command: |
        docker tag app "${ECR_ENDPOINT}:${CIRCLE_SHA1}"
        docker push "${ECR_ENDPOINT}:${CIRCLE_SHA1}"

        if [ "${CIRCLE_BRANCH}" == "main" ]; then
          docker tag app "${ECR_ENDPOINT}:latest"
          docker push "${ECR_ENDPOINT}:latest"
        fi

  decrypt_secrets: &decrypt_secrets
    run:
      name: Decrypt secrets file
      command: |
        echo "${GIT_CRYPT_KEY}" | base64 -d > git-crypt.key
        git-crypt unlock git-crypt.key


orbs:
  browser-tools: circleci/browser-tools@1.4.0

jobs:
  install_dependencies:
    executor: basic-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: laa-estimate-eligibility-{{ checksum "Gemfile.lock" }}-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Which bundler?
          command: bundle -v
      - run:
          name: Install yarn modules
          command: yarn install
      - run:
          name: Install ruby gems
          command: |
            bundle config set path 'vendor/bundle'
            bundle check || {
              # Install CMake - required to install undercover gem
              sudo apt update && sudo apt install cmake
              # Install missing gems
              bundle install
            }
      - run:
          name: Compile assets for test run
          command: bundle exec rake test:prepare
      - save_cache:
          key: laa-estimate-eligibility-{{ checksum "Gemfile.lock" }}-v1-{{ checksum "yarn.lock" }}
          paths:
            - vendor/bundle
            - node_modules
      - persist_to_workspace:
          root: ./
          paths:
            - vendor/bundle
            - node_modules
            - app/assets/builds
            - .bundle/config
  run_specs:
    executor: test-executor
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Run tests
          command: |
            bundle exec rake spec
      - store_artifacts:
          path: coverage
  linters:
    executor: basic-executor
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Rubocop checks
          command: |
            bundle exec rubocop
      - run:
          name: erb-lint checks
          command: |
            bundle exec erblint --lint-all

  build_and_push_to_ecr:
    executor: cloud-platform-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - *decrypt_secrets
      - *build_docker_image
      - *push_to_ecr

  deploy_staging:
    executor: cloud-platform-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *decrypt_secrets
      - *authenticate_k8s
      - deploy:
          name: Deploy LAA Estimate Eligibility Service to Staging
          command: |
            helm upgrade estimate-financial-eligibility ./helm_deploy/laa-estimate-eligibility/. \
                          --install --wait \
                          --debug \
                          --namespace=${K8S_NAMESPACE} \
                          --values ./helm_deploy/laa-estimate-eligibility/values-staging.yaml \
                          --set image.repository="$ECR_ENDPOINT" \
                          --set image.tag="${CIRCLE_SHA1}"          
            

workflows:
  open_pr:
    jobs:
      - install_dependencies
      - linters:
          requires:
            - install_dependencies
      - run_specs:
          requires:
            - install_dependencies
      - build_and_push_to_ecr:
          requires:
            - run_specs
            - linters
          filters:
            branches:
              only:
                - main
      - deploy_staging:
          context: laa-estimate-eligibility-staging
          requires:
            - build_and_push_to_ecr
          filters:
            branches:
              only:
                - main
