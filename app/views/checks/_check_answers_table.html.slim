- sections.each do |section|
  - if section.label
    = pdf_friendly_h2(t("checks.check_answers.sections.#{section.label}"), "l", is_pdf, "govuk-!-margin-top-9")

  - section.subsections.each do |subsection|
    - subsection.tables.each do |table|
      - id_slug = table.index.to_i.positive? ? "table-#{table.screen}-#{table.index}" : "table-#{table.screen}"
      .govuk-summary-card id=(id_slug unless table.skip_change_link)
        .govuk-summary-card__title-wrapper
          h3.govuk-summary-card__title
            = t(check_answers_table_key(table), variable: (table.index + 1 if table.index))
            - if table.disputed?
              span.moj-badge.moj-badge--blue.moj-badge--large.inline-disputed
                = t("generic.disputed_asset")
          - if change_links && !table.skip_change_link
            - anchor = "section-#{table.index + 1}" if table.index
            = link_to t("checks.check_answers.change"),
                      check_step_path_from_step(table.screen.to_sym, params[:assessment_code], anchor:, begin_editing: true),
                      class: "change-link govuk-!-margin-top-1",
                      "aria-label": t("checks.check_answers.change_aria_label.#{table.screen}", index: (table.index + 1 if table.index))
        .govuk-summary-card__content
          dl.govuk-summary-list
            - table.fields.each do |field|
              - case field.type
              - when :money
                = render "checks/money_check_answer",
                          label_text: t("checks.check_answers.#{field.label}", variable: field.index),
                          value_text: field.value,
                          disputed_asset: field.disputed?
              - when :boolean
                = render "checks/check_answer",
                          label_text: t("checks.check_answers.#{field.label}"),
                          value_text: yes_no_boolean(field.value),
                          screen: (field.screen if change_links)
              - when :number_or_text
                = render "checks/check_answer",
                          label_text: t(check_answers_field_key(field)),
                          value_text: field.value || t("generic.not_applicable")
              - when :percentage
                = render "checks/check_answer",
                          label_text: t(check_answers_field_key(field)),
                          value_text: (field.value ? "#{field.value}%" : t("generic.not_applicable"))
              - when :select
                - value_key = field.value ? "#{field.label}_options.#{field.value}" : "not_provided"
                = render "checks/check_answer",
                          label_text: t(check_answers_field_key(field)),
                          value_text: t("checks.check_answers.#{value_key}"),
                          screen: (field.screen if change_links)
              - when :frequency
                = render "checks/check_answer",
                          label_text: t(check_answers_field_key(field)),
                          value_text: t("checks.check_answers.frequency_options.#{field.value || 'not_applicable'}")
              - when :money_with_frequency
                - alt_value = field.alt_value if field.value&.to_f&.positive?
                = render "checks/money_with_frequency",
                          label_text: t(check_answers_field_key(field)),
                          value: field.value,
                          conditional: false,
                          frequency: t("checks.check_answers.frequency_options.#{alt_value || 'not_applicable'}")
              - when :optional_money_with_frequency
                = render "checks/optional_money_with_frequency",
                          label_text: t(check_answers_field_key(field)),
                          value: field.value,
                          relevant: field.relevancy_value,
                          frequency: t("checks.check_answers.frequency_options.#{field.alt_value || 'not_applicable'}")
              - when :optional_money
                = render "checks/optional_money_check_answer",
                          label_text: t(check_answers_field_key(field)),
                          value_text: field.value,
                          disputed_asset: field.disputed?,
                          relevant: field.relevancy_value
              - else
                - raise "Unknown field_type #{field.type}"
