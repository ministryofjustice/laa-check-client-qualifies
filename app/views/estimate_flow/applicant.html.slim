- content_for :page_title
  = t(".heading")
- content_for :back do
  = back_link(:applicant, @estimate, @back_buttons_invoke_browser_back_behaviour)

.govuk-grid-column-two-thirds
  = form_for(@form, url: wizard_path, method: :put) do |form|
    = render "shared/heading", header_text: t(".heading")

    = form.govuk_error_summary t("generic.error_summary_title")

    - if !FeatureFlags.enabled?(:asylum_and_immigration) && @form.level_of_help != "controlled"
      = form.govuk_collection_radio_buttons :legacy_proceeding_type,
              ApplicantForm::PROCEEDING_TYPES.to_a,
              :last,
              ->(pair) { t(".legacy_proceeding_type.#{pair[0]}.label") },
              legend: { text: t(".legacy_proceeding_type.legend") },
              hint: { text: t(".legacy_proceeding_type.hint") }

    = form.govuk_collection_radio_buttons :over_60,
                                          yes_no_options, :first, :last,
                                          legend: { text: t(".over_60.legend") },
                                          hint: { text: t(".over_60.hint") }

    = form.govuk_radio_buttons_fieldset(:partner,
            legend: { text: t(".partner.legend") },
            hint: lambda { \
                     tag.p(t(".partner.hint_text"), class: "govuk-hint") + \
                     tag.ul(class: "govuk-list govuk-list--bullet") do \
                        t(".partner.hint_list").map { |benefit| tag.li(benefit, class: "govuk-hint") }.join.html_safe \
                     end + \
                     tag.p(t(".partner.partner_additional.hint_text"), class: "govuk-hint") + \
                     tag.ul(class: "govuk-list govuk-list--bullet") do \
                       t(".partner.partner_additional.hint_list").map { |benefit| tag.li(benefit, class: "govuk-hint") }.join.html_safe \
                     end \
                  }) do
      = form.govuk_radio_button :partner,
              true,
              label: { text: t("generic.yes_choice") },
              link_errors: true
      = form.govuk_radio_button :partner, false, label: { text: t("generic.no_choice") }

    = form.govuk_collection_radio_buttons :employed, employment_options, :first, :last,
                                          legend: { text: t(".employed.legend") },
                                          hint: { text: t(".employed.hint") }

    = form.govuk_collection_radio_buttons :passporting, yes_no_options, :first, :last,
                                          legend: { text: t(".passporting.legend") },
                                          hint: lambda { \
                                                  tag.p(t(".passporting.hint"), class: "govuk-hint") + \
                                                  tag.ul(class: "govuk-list govuk-list--bullet") do \
                                                    t(".passporting.valid_benefits").map { |benefit| \
                                                      tag.li(benefit, class: "govuk-hint") \
                                                    }.join.html_safe \
                                                   end + \
                                                  tag.p(t(".passporting.partner_hint"), class: "govuk-hint") \
                                                }

    = form.govuk_submit t("generic.save_and_continue")

= render "shared/question_sidebar", \
           level_of_help: @estimate.level_of_help,
           links: applicant_links(@estimate.level_of_help)
