- (@model.has_partner? ? "estimates.show.capital_header.partner" : "estimates.show.capital_header.client").tap do |text|
  p
    - if @model.level_of_help == "controlled"
      = t("#{text}.first_controlled")
    - else
      = t("#{text}.first_certificated")
  p class="govuk-!-margin-bottom-8"
    = t("#{text}.second")

- if @model.client_owns_main_home?
  = render "property_table",
          caption_size:,
          caption: t("estimates.show.property"),
          hint_key: "estimates.show.main_home.equity.hint",
          type: "main_home",
          rows: @model.client_main_home_rows,
          assessed_value: @model.client_assessed_equity

- if @model.client_owns_additional_property?
  = render "property_table",
          caption_size:,
          caption: t("estimates.show.client_additional_property"),
          hint_key: "estimates.show.client_additional_property_hint",
          type: "additional_property",
          rows: @model.client_additional_property_rows,
          assessed_value: @model.client_additional_equity

- if @model.vehicle_owned?
  = render "vehicle_table",
          caption_size:,
          caption: t("estimates.show.vehicles"),
          rows: @model.client_vehicle_rows,
          assessed_value: @model.client_vehicle_assessed_value

- if @model.partner_owns_additional_property?
  = render "property_table",
          caption_size:,
          caption: t("estimates.show.partner_additional_property"),
          hint_key: "estimates.show.partner_additional_property_hint",
          type: "additional_property",
          rows: @model.partner_additional_property_rows,
          assessed_value: @model.partner_additional_equity

- if @model.partner_vehicle_owned?
  = render "vehicle_table",
          caption_size:,
          caption: t("estimates.show.partner_vehicles"),
          rows: @model.partner_vehicle_rows,
          assessed_value: @model.partner_vehicle_assessed_value

= render "disposable_capital_table",
        caption_size:,
        caption: t("estimates.show.client_disposable_capital"),
        person: :client,
        rows: @model.client_capital_rows,
        subtotal_rows: @model.client_capital_subtotal_rows,
        assessed_capital: (@model.client_assessed_capital if @model.has_partner?)

- if @model.has_partner?
  = render "disposable_capital_table",
          caption_size:,
          caption: t("estimates.show.partner_disposable_capital"),
          person: :partner,
          rows: @model.partner_capital_rows,
          assessed_capital: @model.partner_assessed_capital

  - if @model.pensioner_disregard_applied?
    = govuk_table do |table|
      - table.caption(size: caption_size, text: t("estimates.show.pensioner_disregard"))
      - table.body do |body|
        - body.row do |row|
          - row.cell(classes: %w[no-bottom-border], text: t("estimates.show.pensioner_disregard_caption"))
          - row.cell(classes: %w[no-bottom-border], text: "")
        - @model.pensioner_disregard_rows.each do |type, amount|
          - body.row do |row|
            - row.cell(header: true, text: t("estimates.show.pensioner_disregard_types.#{type}.text"))
            - row.cell(numeric: true, text: amount)
        - body.row(classes: %w[solid-top-border]) do |row|
          - row.cell(header: true, text: t("estimates.show.pensioner_disregard_types.assessed_capital.text"))
          - row.cell(numeric: true, header: true, text: @model.total_assessed_capital)

= govuk_table do |table|
  - table.caption(size: caption_size, text: t("estimates.show.total"))
  - table.body do |body|
    - body.row(classes: %w[solid-top-border]) do |row|
      - row.cell(header: true, text: t("estimates.show.total_assessed_capital"))
      - row.cell(header: true, text: @model.total_assessed_capital, numeric: true)
    - body.row(classes: %w[solid-bottom-border]) do |row|
      - row.cell(text: t("estimates.show.capital_upper_threshold"))
      - row.cell(text: @model.capital_upper_threshold, numeric: true)
