- (@model.has_partner? ? "estimates.show.capital_header.partner" : "estimates.show.capital_header.client").tap do |text|
  p
    - if @model.level_of_help == "controlled"
      = t("#{text}.first_controlled")
    - else
      = t("#{text}.first_certificated")
  p class="govuk-!-margin-bottom-8"
    = t("#{text}.second")

- if @model.client_owns_main_home?
  = render "property_table",
           caption_size:,
           person: :client,
           type: :main_home,
           data: @model.main_home_data,
           assessed_value: @model.main_home_assessed_equity

- @model.client_additional_property_data.each_with_index do |property, index|
  = render "property_table",
           caption_size:,
           person: :client,
           type: :additional_property,
           counter: index + 1,
           data: property,
           assessed_value: @model.client_additional_property_assessed_equity

- if @model.vehicle_owned?
  - @model.display_household_vehicles.each_with_index do |vehicle, index|
    - count = index + 1
    h2 class="govuk-heading-m" = t("estimates.show.vehicles", number: count).to_s
    = govuk_table do |table|
      - table.with_body do |body|
        - vehicle.each do |key, value|
          - body.with_row do |row|
            - row.with_cell(header: true, text: t("estimates.show.vehicle.#{key}"))
            - row.with_cell(text: value, numeric: true)
        - body.with_row(classes: %w[solid-top-border]) do |row|
          - row.with_cell(header: true, text: t("estimates.show.vehicle.assessed_value"))
          - row.with_cell(classes: %w[govuk-!-font-weight-bold], text: @model.household_vehicle_assessed_value, numeric: true)

- @model.partner_additional_property_data.each_with_index do |property, index|
  = render "property_table",
           caption_size:,
           person: :partner,
           type: :additional_property,
           counter: index + 1,
           data: property,
           assessed_value: @model.partner_additional_property_assessed_equity

= render "disposable_capital_table",
        caption_size:,
        caption: t("estimates.show.client_disposable_capital"),
        person: :client,
        rows: @model.client_capital_rows,
        subtotal_rows: @model.client_capital_subtotal_rows,
        assessed_capital: (@model.client_assessed_capital if @model.has_partner?)

- if @model.has_partner?
  = render "disposable_capital_table",
          caption_size:,
          caption: t("estimates.show.partner_disposable_capital"),
          person: :partner,
          rows: @model.partner_capital_rows,
          assessed_capital: @model.partner_assessed_capital

  - if @model.pensioner_disregard_applied?
    = govuk_table do |table|
      - table.with_caption(size: caption_size, text: t("estimates.show.pensioner_disregard"))
      - table.with_body do |body|
        - body.with_row do |row|
          - row.with_cell(classes: %w[no-bottom-border], text: t("estimates.show.pensioner_disregard_caption"))
          - row.with_cell(classes: %w[no-bottom-border], text: "")
        - @model.pensioner_disregard_rows.each do |type, amount|
          - body.with_row do |row|
            - row.with_cell(header: true, text: t("estimates.show.pensioner_disregard_types.#{type}"))
            - row.with_cell(numeric: true, text: amount)
        - body.with_row(classes: %w[solid-top-border]) do |row|
          - row.with_cell(header: true, text: t("estimates.show.pensioner_disregard_types.assessed_capital"))
          - row.with_cell(numeric: true, header: true, text: @model.total_assessed_capital)

h2 class="govuk-heading-#{caption_size}" = t("estimates.show.total")
= govuk_table do |table|
  - table.with_body do |body|
    - body.with_row(classes: %w[solid-top-border]) do |row|
      - row.with_cell(header: true, text: t("estimates.show.total_assessed_capital"))
      - row.with_cell(classes: %w[govuk-!-font-weight-bold], text: @model.total_assessed_capital, numeric: true)
    - body.with_row(classes: %w[solid-bottom-border]) do |row|
      - row.with_cell(classes: %w[govuk-!-font-weight-regular], header: true, text: t("estimates.show.capital_upper_threshold"))
      - row.with_cell(text: @model.capital_upper_threshold, numeric: true)

= render "ineligible_explanation", value_type: :capital
