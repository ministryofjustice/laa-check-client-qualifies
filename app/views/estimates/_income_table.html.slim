== pdf_friendly_h2(t("estimates.show.client_income"), "m", @is_pdf, nil, nil)

== pdf_friendly_p_element(t("estimates.show.period_conversion_hint"), @is_pdf, nil)

= govuk_table do |table|
  - table.with_body do |body|
    - @model.client_income_rows.each do |income_type, money_amount|
      = render "income_row", body:, income_type:, money_amount:

- if @model.has_partner?
  == pdf_friendly_h2(t("estimates.show.partner_income"), "m", @is_pdf, nil, nil)

  == pdf_friendly_p_element(t("estimates.show.period_conversion_hint"), @is_pdf, nil)
  = govuk_table do |table|
    - table.with_body do |body|
      - @model.partner_income_rows.each do |income_type, money_amount|
        = render "income_row", body:, income_type:, money_amount:

== pdf_friendly_h2(t("estimates.show.total"), "m", @is_pdf, nil, "govuk-heading-#{caption_size}")
= govuk_table do |table|
  - table.with_body do |body|
    - body.with_row(classes: %w[solid-top-border]) do |row|
      - row.with_cell(header: true, text: t("estimates.show.#{@model.has_partner? ? :gross_with_partner : :gross_monthly_income}"))
      - row.with_cell(classes: %w[govuk-!-font-weight-bold], text: @model.gross_income, numeric: true)
    - body.with_row(classes: %w[solid-bottom-border]) do |row|
      - row.with_cell(classes: %w[govuk-!-font-weight-regular], header: true, text: t("estimates.show.gross_income_upper_threshold"))
      - row.with_cell(text: @model.gross_income_upper_threshold, numeric: true)

= render "ineligible_explanation", value_type: :gross_income
