== pdf_friendly_h2(t("estimates.show.client_outgoings"), "m", @is_pdf, nil, nil)

== pdf_friendly_p_element(t("estimates.show.period_conversion_hint"), @is_pdf, nil)

= govuk_table do |table|
  - table.with_body do |body|
    - @model.client_outgoing_rows.each do |outgoing_type, money_amount|
      = render "outgoings_row", body:, outgoing_type:, money_amount:, person: :client

- if @model.has_partner?
  == pdf_friendly_h2(t("estimates.show.partner_outgoings"), "m", @is_pdf, nil, nil)

  == pdf_friendly_p_element(t("estimates.show.period_conversion_hint"), @is_pdf, nil)

  = govuk_table do |table|
    - table.with_body do |body|
      - @model.partner_outgoing_rows.each do |outgoing_type, money_amount|
        = render "outgoings_row", body:, outgoing_type:, money_amount:, person: :partner

== pdf_friendly_h2(t("estimates.show.household_outgoings"), "m", @is_pdf, nil, nil)

== pdf_friendly_p_element(t("estimates.show.period_conversion_hint"), @is_pdf, nil)

= govuk_table do |table|
  - table.with_body do |body|
    - @model.household_outgoing_rows.each do |outgoing_type, money_amount|
      = render "outgoings_row", body:, outgoing_type:, money_amount:, person: :household

== pdf_friendly_h2(t("estimates.show.total"), caption_size.to_s, @is_pdf, nil, nil)

= govuk_table do |table|
  - table.with_body do |body|
    - body.with_row(classes: %w[solid-top-border]) do |row|
      - row.with_cell(header: true, text: t("estimates.show.#{@model.has_partner? ? :outgoings_with_partner : :gross_monthly_outgoings}"))
      - row.with_cell(classes: %w[govuk-!-font-weight-bold], text: @model.gross_outgoings, numeric: true)
    - body.with_row do |row|
      ruby:
        text = (t("estimates.show.disposable_monthly_income") +
                tag.div(t("estimates.show.disposable_income_hint"),
                        class: "govuk-hint govuk-!-margin-top-1 govuk-!-margin-bottom-0")).html_safe
      - row.with_cell(header: true, text:)
      - row.with_cell(classes: %w[govuk-!-font-weight-bold], text: @model.total_disposable_income, numeric: true)
    - body.with_row(classes: %w[solid-bottom-border]) do |row|
      - row.with_cell(classes: %w[govuk-!-font-weight-regular], header: true, text: t("estimates.show.disposable_income_upper_threshold"))
      - row.with_cell(text: @model.disposable_income_upper_threshold, numeric: true)

= render "ineligible_explanation", value_type: :disposable_income
