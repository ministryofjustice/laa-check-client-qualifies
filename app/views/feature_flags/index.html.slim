.govuk-grid-column-two-thirds
  h1.govuk-heading-xl = t(".feature_flags")
  = govuk_table do |table|
    ruby:
      table.with_caption(size: "m", text: t(".time_based"))
      table.with_body do |body|
        body.with_row do |row|
          row.with_cell(text: t(".flag"), header: true)
          row.with_cell(text: t(".enabled"), header: true)
          row.with_cell(text: t(".override"), header: true) if FeatureFlags.overrideable?
        end
        FeatureFlags.time_dependant.each do |flag|
          body.with_row do |row|
            row.with_cell(text: flag)
            row.with_cell(text: FeatureFlags.enabled?(flag, without_session_data: true) ? t("generic.yes_choice") : t("generic.no_choice"))
            row.with_cell(text: link_to(t(".override"), edit_feature_flag_path(flag))) if FeatureFlags.overrideable?
          end
        end
      end
  = govuk_table do |table|
    ruby:
      table.with_caption(size: "m", text: t(".static"))
      table.with_body do |body|
        body.with_row do |row|
          row.with_cell(text: t(".flag"), header: true)
          row.with_cell(text: t(".enabled"), header: true)
          row.with_cell(text: t(".override"), header: true) if FeatureFlags.overrideable?
        end
        FeatureFlags.static.each do |flag|
          body.with_row do |row|
            row.with_cell(text: flag)
            row.with_cell(text: FeatureFlags.enabled?(flag, without_session_data: true) ? t("generic.yes_choice") : t("generic.no_choice"))
            row.with_cell(text: link_to(t(".override"), edit_feature_flag_path(flag))) if FeatureFlags.overrideable?
          end
        end
      end
