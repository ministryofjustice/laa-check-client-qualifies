- legend_key = @check.partner ? "question_flow.dependant_details.legend_with_partner" : "question_flow.dependant_details.legend"
- content_for :page_title
  = t(legend_key)
- content_for :back do
  = back_link(@previous_step, @back_buttons_invoke_browser_back_behaviour)

.govuk-grid-column-two-thirds
  = form_for(@form, url: request.path, method: :put) do |form|
    = form.govuk_error_summary t("generic.error_summary_title")

    = render "shared/heading",
            header_text: t(legend_key),
            tag: :household
      = govuk_warning_text(text: t("question_flow.dependant_details.income_warning",
              limit: dependant_monthly_upper_limit))

    = form.govuk_radio_buttons_fieldset :child_dependants,
            legend: { text: t("question_flow.dependant_details.child_dependants.legend#{'_with_partner' if @check.partner}") } do

      = govuk_details(summary_text: t("question_flow.dependant_details.child_dependants.summary")) do
          p.govuk-text = t("question_flow.dependant_details.child_dependants.paragraph_1#{'_with_partner' if @check.partner}")
          - t("question_flow.dependant_details.child_dependants.paragraphs", limit: dependant_monthly_upper_limit).each do |paragraph|
            p.govuk-text = paragraph
          ul.govuk-list.govuk-list--bullet
            - t("question_flow.dependant_details.child_dependants.bullets").each
              li = _1

      = render "shared/radio_button_set",
               form:,
               field_name: :child_dependants,
               buttons: [{ value: true, options: { label: { text: t("generic.yes_choice") } } },
                         { value: false, options: { label: { text: t("generic.no_choice") } } }]
        = form.govuk_text_field :child_dependants_count,
            width: 5,
            value: integer_field_value(form, :child_dependants_count),
            label: { text: t("question_flow.dependant_details.how_many_child") }

    = form.govuk_radio_buttons_fieldset :adult_dependants,
            legend: { text: t("question_flow.dependant_details.adult_dependants.legend#{'_with_partner' if @check.partner}") } do

      = govuk_details(summary_text: t("question_flow.dependant_details.adult_dependants.summary")) do
          p.govuk-text = t("question_flow.dependant_details.adult_dependants.paragraph#{'_with_partner' if @check.partner}")
          p.govuk-text = t("question_flow.dependant_details.adult_dependants.exclude")
          ul.govuk-list.govuk-list--bullet
            - t("question_flow.dependant_details.adult_dependants.bullets").each
              li = _1

      = render "shared/radio_button_set",
               form:,
               field_name: :adult_dependants,
               buttons: [{ value: true, options: { label: { text: t("generic.yes_choice") } } },
                         { value: false, options: { label: { text: t("generic.no_choice") } } }]
        = form.govuk_text_field :adult_dependants_count,
            width: 5,
            value: integer_field_value(form, :adult_dependants_count),
            label: { text: t("question_flow.dependant_details.how_many_adult") }

    = form.govuk_submit t("generic.save_and_continue")

= render "shared/question_sidebar",
          level_of_help: @check.level_of_help,
          links: dependants_links(@check.level_of_help)
