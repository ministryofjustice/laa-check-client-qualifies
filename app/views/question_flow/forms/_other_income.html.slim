- partner ||= false

- content_for :amount_and_frequency_hidden_description
  = govuk_visually_hidden(t("question_flow.other_income.hidden_description_amount_and_frequency"))

- content_for :amount_hidden_description
  = govuk_visually_hidden(t("question_flow.other_income.hidden_description_amount"))

= form_for(@form, url: request.path, method: :put) do |form|
  = form.govuk_error_summary t("generic.error_summary_title")
  = render "shared/heading",
            header_text: t("question_flow.#{i18n_key}.heading"),
            tag: (:partner if partner)
  - OtherIncomeForm::REGULAR_INCOME_TYPES.each do |type|
    = form.govuk_radio_buttons_fieldset :"#{type}_relevant",
          legend: { text: t("question_flow.#{i18n_key}.#{type}.question") },
          hint: { text: t("question_flow.#{i18n_key}.#{type}.question_hint") } do
      = render "shared/radio_button_set",
              form:,
              field_name: :"#{type}_relevant",
              buttons: [{ value: true,
                          options: { label: { text: t("generic.yes_choice") },
                                              hint: -> { content_for(:amount_and_frequency_hidden_description) } } },
                        { value: false, options: { label: { text: t("generic.no_choice") } } }]
        = render "shared/money_input",
                form:,
                field: :"#{type}_conditional_value",
                width: 10,
                label_text: t("question_flow.other_income.amount")

        = form.govuk_collection_radio_buttons :"#{type}_frequency",
                                              @form.frequencies,
                                              :first,
                                              :last,
                                              legend: { text: t("question_flow.other_income.frequency"),
                                                        size: "s",
                                                        class: "govuk-!-font-weight-regular" }

  - OtherIncomeForm::IRREGULAR_INCOME_TYPES.each do |type|
    = form.govuk_radio_buttons_fieldset :"#{type}_relevant",
          legend: { text: t("question_flow.#{i18n_key}.#{type}.question") },
          hint: { text: t("question_flow.#{i18n_key}.#{type}.question_hint") } do
      - if type == :other
        = render "shared/cost_of_living"
      = render "shared/radio_button_set",
              form:,
              field_name: :"#{type}_relevant",
              buttons: [{ value: true,
                          options: { label: { text: t("generic.yes_choice") },
                                              hint: -> { content_for(:amount_hidden_description) } } },
                        { value: false, options: { label: { text: t("generic.no_choice") } } }]

        - level = @check.controlled? ? "controlled" : "certificated"
        = render "shared/money_input",
                form:,
                field: :"#{type}_conditional_value",
                width: 10,
                label_text: t("question_flow.#{i18n_key}.#{type}.#{level}_instruction")

  = form.govuk_submit t("generic.save_and_continue")
