- partner ||= false

- content_for :amount_and_frequency_hidden_description
  = govuk_visually_hidden(t("question_flow.outgoings.hidden_description_amount_and_frequency"))

= form_for(@form, url: request.path, method: :put) do |form|
  = form.govuk_error_summary t("generic.error_summary_title")
  = render "shared/heading",
           header_text: t("question_flow.#{i18n_key}.heading"),
           post_header_text: t("question_flow.#{i18n_key}.caption"),
           tag: (:partner if partner)
  - OutgoingsForm::PAYMENT_TYPES.each do |type|
    - next if type == :childcare_payments && !@form.eligible_for_childcare_costs?

    = form.govuk_radio_buttons_fieldset :"#{type}_relevant",
          legend: { text: t("question_flow.#{i18n_key}.#{type}.question") },
          hint: { text: t("question_flow.#{i18n_key}.#{type}.question_hint") } do
      = render "shared/radio_button_set",
              form:,
              field_name: :"#{type}_relevant",
              buttons: [{ value: true,
                          options: { label: { text: t("generic.yes_choice") },
                                              hint: -> { content_for(:amount_and_frequency_hidden_description) } } },
                        { value: false, options: { label: { text: t("generic.no_choice") } } }]
        = render "shared/money_input",
                form:,
                field: :"#{type}_conditional_value",
                width: 10,
                label_text: t("question_flow.outgoings.amount")

        = form.govuk_collection_radio_buttons :"#{type}_frequency",
                                              @form.frequencies,
                                              :first,
                                              :last,
                                              legend: { text: t("question_flow.outgoings.frequency"),
                                                        size: "s",
                                                        class: "govuk-!-font-weight-regular" }

  = form.govuk_submit t("generic.save_and_continue")
