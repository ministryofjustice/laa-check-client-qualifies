= pdf_friendly_h2(t("results.show.add_to_a_cw_form"), "m", @is_pdf)
= pdf_friendly_p_element(t("results.show.add_to_a_cw_form_paragraph"), @is_pdf)
- if download_option
  p.govuk-body = t("results.show.add_to_a_cw_form_paragraph_two")

  = link_to t("results.show.select_a_cw_form"),
            controlled_work_document_selection_path(assessment_code: params[:assessment_code]),
            class: "govuk-button", data: { module: "govuk-button" }

ruby:
  level_of_help = if @check.controlled?
                    @check.controlled_legal_representation ? "controlled_clr" : "controlled"
                  else
                    "certificated"
                  end

= pdf_friendly_h2(t("results.show.check_scope_and_merits.header"), "m", @is_pdf)
= pdf_friendly_p_element(t("results.show.check_scope_and_merits.under_18_#{level_of_help}" \
    "#{'_asylum_support' if @check.asylum_support}_paragraph"), @is_pdf)
= pdf_friendly_p_element(t("results.show.check_scope_and_merits.under_18_#{level_of_help}" \
    "#{'_asylum_support' if @check.asylum_support}_paragraph_two"), @is_pdf)
= pdf_friendly_h2(t("results.show.relevant_legislation_and_guidance.header"), "m", @is_pdf)
= pdf_friendly_p_element(t("results.show.relevant_legislation_and_guidance.paragraph_html",
              page_url: document_link(:legislation_CLAR_2013),
              page_url_2: document_link(:legislation_ammendments)), @is_pdf)
= pdf_friendly_p_element(t("results.show.relevant_legislation_and_guidance.paragraph_two_html",
              page_url_3: document_link(:lc_guidance_controlled)), @is_pdf)
